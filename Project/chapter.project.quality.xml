<?xml version="1.0" encoding="UTF-8"?>
<!-- $Author: netkiller $ -->
<!-- $Id: chapter.sqa.xml 495 2012-11-23 02:50:46Z netkiller $ -->
<chapter id="sqa">
	<title>质量管理</title>
	<subtitle>SQA (Software Quality Assurance) / SCM (Software Configuration Management)</subtitle>
	<para>是为了确保项目达到客户所规定的质量要求所实施的一系列管理过程。它包括质量规划，质量控制和质量保证等。</para>
	<section id="无缺点管理">
		<title>无缺点管理</title>
		<subtitle>zero defects management</subtitle>
		<para>由于周末经常外出自驾游，途中会经过东莞、惠州、观澜、大鹏等工业区，哪里的工厂给过一个很深的印象，每个工厂楼顶会有一个巨大的牌匾“已通过ISO 9001”。这让我开始思考以往的质量管理。</para>
		<orderedlist numeration="arabic" spacing="compact">
			<title>我认为质量管理方法可以分为两类：</title>
			<listitem>
				<para>考察过程</para>
			</listitem>
			<listitem>
				<para>检验结果</para>
			</listitem>
		</orderedlist>
		<para>传统劳动密集型产业可以采用考察过程（例如ISO9001），制定产生规范，产生预期结果。这种方法对于资本密集型产业或知识密集型产业并不适合。所以另一种检验结果的质量管理办法孕育而生。</para>
		<orderedlist>
			<title>简单的说，这种质量管理办法是：</title>
			<listitem>
				<para>首先制定预期结果，</para>
			</listitem>
			<listitem>
				<para>项目完成后与期望结果对比</para>
			</listitem>
			<listitem>
				<para>输出验收报告</para>
			</listitem>
			<listitem>
				<para>根据验收报告做出处理</para>
			</listitem>
		</orderedlist>
		<para>这种管理的方法存在很多弊端，工作中你会遇到下面这些问题：</para>
		<orderedlist>
			<title>考察结果的质量管理存在的弊端：</title>
			<listitem>
				<para>无论如何你都不可能把所有预期结果都能考虑到</para>
			</listitem>
			<listitem>
				<para>所做的工作仅仅为了满足预期结果的验收</para>
			</listitem>
			<listitem>
				<para>对已知缺陷视而不见</para>
			</listitem>
			<listitem>
				<para>而对于验收人员，验收报告以外的缺陷，心照不宣</para>
			</listitem>
			<listitem>
				<para>无法预见缺陷，发现缺陷为时已晚,已经到了项目尾声。</para>
			</listitem>
		</orderedlist>
		<para>举一个例子，国家检验奶粉有一个标准，一些不法企业在奶粉中添加三聚氰胺，可以通过检测，最终酿成惨剧。</para>
		<para>无论是考察过程的质量管理还是检验结果的质量管理，这两种管理方式仅仅能做出合格的产品，无法做出精品。</para>
		<para>丰田公司的一位高级管理人员说：“我们不应使用全面质量管理，因为这种管理充其量只能让缺点减至10%。如果我们生产400万辆汽车的话，便会有40万人购得一辆带毛病的车，这是生产与用户之间的最大危机，而推行无缺点管理则会消除这种现象。”现在，领先的日本公司逐渐由全面质量管理转向无缺点管理。</para>
		<para>无缺点管理的范围已经超出了产品质量范畴</para>
		<orderedlist>
			<listitem>
				<para> 计划缺陷</para>
			</listitem>
			<listitem>
				<para> 设计缺陷</para>
			</listitem>
			<listitem>
				<para> 产品缺陷</para>
			</listitem>
			<listitem>
				<para> 研发缺陷</para>
			</listitem>
			<listitem>
				<para> 开发缺陷</para>
			</listitem>
			<listitem>
				<para> 工艺缺陷</para>
			</listitem>
			<listitem>
				<para> 材料缺陷</para>
			</listitem>
			<listitem>
				<para> 流程缺陷</para>
			</listitem>
			<listitem>
				<para> 设备缺陷</para>
			</listitem>
			<listitem>
				<para> 人的缺陷</para>
			</listitem>
			<listitem>
				<para> 生产缺陷</para>
			</listitem>
			<listitem>
				<para> 服务缺陷</para>
			</listitem>
			<listitem>
				<para> 市场缺陷</para>
			</listitem>
		</orderedlist>

	</section>

	<section id="为什么自动化测试难以推广">
		<title>为什么自动化测试难以推广</title>
		<para>2005 第一次接触自动化测试，十年已经过去了，着眼身边的企业，真正实施自动化测试的企业非常少。 大部分企业，测试仍然处在，点鼠标阶段。测试人员通常是验收交付，而没有参与整个软件开发周期。</para>
		<section>
			<title>为什么自动化测试难以实施</title>
			<para>为什么自动化测试难以实施，我想有几个问题，阻碍了自动测试普及。 其实懂得自动化测试工具的人还是很多的，自动化测试难以实施，并不是缺乏技术人才。Load Runner, QTP 等等很多测试人员都会使用，为什么他们放弃这些工具，改用手动测试呢？</para>
			<orderedlist>
				<title></title>
				<listitem>90%测试仍然处在功能测试</listitem>
				<listitem>很多测试人员没有开发背景</listitem>
				<listitem>测试角色，没有贯穿整个软件开发周期</listitem>
				<listitem>各种问题阻碍了自动化脚本</listitem>
				<listitem>在中国测试人员人力成本太低</listitem>
			</orderedlist>
			<para>随着技术发展，软件的多样性，已经不局限于基于CS结构的GUI, 基于BS浏览器WEB UI。例如目前的安卓系统，苹果IOS系统，微软的 Windows Mobile 系统等等。 还有一些非人机交互界面，各种协议/接口，例如json,bson,xml-rpc,soap,mq(message queue)我认为这些都应该纳入自动化测试范畴。 这就需要测试人员具有一定的开发能力，且测试上述内容速要广泛的技术知识支撑。</para>
			<orderedlist>
				<title>我认为高级测试工程师，需要具备以下能力：</title>
				<listitem>嗅探器的使用</listitem>
				<listitem>Debug工具</listitem>
				<listitem>负载均衡技术</listitem>
				<listitem>TCP/IP，UDP</listitem>
				<listitem>了解各种协议族</listitem>
				<listitem>渗透/注入</listitem>
				<listitem>数据库与缓存</listitem>
				<listitem>搜索引擎</listitem>
				<listitem>文件系统与存储</listitem>
			</orderedlist>
			<para>就WEB测试而言，涉及的内容就太广泛了，从浏览器->WEB服务器->APP服务器->缓存->数据库，中间会经过各种代理，负载均衡，分布式文件系统等等。</para>
			<para>配置这样一个测试环境都已经非常不容易，幸好我们可以采用自动化运维干这件事。</para>
		</section>
		<section id="是什么阻碍了自动化测试">
			<title>是什么阻碍了自动化测试？</title>
			<orderedlist>
				<title></title>
				<listitem>各种UI特效</listitem>
				<listitem>验证码，包括手机，图形，语音......</listitem>
				<listitem>浏览器支持</listitem>
				<listitem>第三方插件(Flash,ActiveX...)</listitem>
				<listitem>技术封闭</listitem>
			</orderedlist>
			<para>互联网的快速发展 Load Runner, QTP 等等软件，我认为已经跟不上互联网的快速了，他们仍然按照传统周期发布软件更新。 而互联网需要的是快速变化，互联网应用程序开发者，需要体验更多的创新功能，软件软件发布周期至少一年一个版本。真的太慢了。</para>
			<para>互联网不断加入的新技术成为了自动化测试障碍，传统软件无法支持这些新技术，甚至向微软这样的企业技术跟进都显得不给力。</para>
			<para>Windows Automation 3.0 是非常高大上玩意，但是你在Microsoft官网能找到的资料，少之甚少，我不知道微软的目的何在。</para>
			<para>只有 Load Runner, QTP 这些公司与微软合作，才能拿到Windows Automation API。</para>
		</section>
		<section id="中国测试人员的人力成本">
			<title>中国测试人员的人力成本</title>
			<para>测试人员的薪水在开发团队中应该是处于中下等的。与高级程序员，软件架构师是有很大差距的。这也造成了自动化测试难以实施的原因。</para>
			<para>我们需要从高级程序员，软件架构师转测试的高级测试人员。</para>
			<para>我们需要黑客级的测试人员！！！</para>
		</section>
	</section>

	
	
</chapter>