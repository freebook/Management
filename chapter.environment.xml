<?xml version="1.0" encoding="UTF-8"?>

<chapter>
	<title>升级流程</title>
	<para>下面流程是自动化完成，这里分部讲解</para>
	<procedure>
		<title>升级操作流程</title>
		<step>
			<para>数据备份</para>
			<para>通常绝大多数人，备份还采用 cp / tar / 以及稍微有点技术含量的rsync做差异备份 例如</para>
			<screen>
					<![CDATA[
cp -r /www/example.com/www.example.com /backup/www.example.com-2016-05-23
tar zcvf www.example.com-2016-05-23.tgz /www/example.com/www.example.com

rsync -auzv /www/example.com/www.example.com /backup/www.example.com-2016-05-23
					]]>
			</screen>
			<para>这种备份适合比较小的软件包，对于图片服务器什么的就比较耗时。我很早就开始尝试使用快照备份当时使用LVM，后来转为Btrfs文件系统，到2010的时候btrfs快照已经非常成熟.
			</para>
			<screen>
					<![CDATA[
[root@www.netkiller.cn www]# btrfs subvolume snapshot /www /www/backup_2016-05-23
Create a snapshot of '/www' in '/www/backup_2016-05-23'
					]]>
			</screen>
			<para>快照瞬间建立，使用下面命令查看快照</para>
			<screen>
					<![CDATA[
[root@www.netkiller.cn www]# btrfs subvolume list /www
ID 284 gen 18583 top level 5 path backup_2016-05-23
					]]>
			</screen>
			<para>挂载快照</para>
			<screen>
					<![CDATA[
[root@www.netkiller.cn www]# mount -t btrfs -o subvol=backup_2016-05-23 /dev/xvdb1 /mnt
[root@www.netkiller.cn www]# ll /mnt/
					]]>
			</screen>
			<para>
				关于BTRFS详细使用方法，请参考
				<ulink url="http://www.netkiller.cn/linux/index.html">《Netkiller Linux 手札》</ulink>
			</para>
		</step>
		<step>
			<para></para>

			<para></para>
		</step>
		<step>
			<para></para>

		</step>
		<step>
			<para></para>
			<substeps>
				<step>
					<para></para>
				</step>
				<step>
					<para></para>
				</step>
			</substeps>
		</step>
		<step>
			<para></para>
		</step>
	</procedure>

</chapter>

<chapter id="index"><?dbhtml dir="trac"?>
	<title>Trac 项目管理</title>
	<orderedlist>
		<title>Trac 初始化步骤</title>
		<listitem>首先进入Admin，初始化TRAC</listitem>
		<listitem>使用Wiki创建项目页</listitem>
		<listitem>创建Milestones</listitem>
		<listitem>创建Ticket</listitem>
	</orderedlist>
	<section>
		<title>Administration</title>
		<section>
			<title>General</title>
			<para>安装后首先分配权限</para>
			<procedure>
				<title>Permissions 设置 </title>
				<step>
					<para>我习惯于 创建一个  developer 组和 adminstrator 组</para>
					<para>然后创建用户隶属于 developer 组</para>
				</step>
				<step>
					<para>创建用户隶属于developer组</para>
				</step>
			</procedure>
		</section>
		<section>
			<title>Ticket System</title>
			<procedure>
				<title>Ticket System 设置</title>
				<step>
					<para>设置 Components</para>
					<para>例如电商项目，这里可以设置，注册登录，用户中心，购物车，物流配送等等</para>
				</step>
				<step>
					<para>设置 Milestones</para>
					<para><![CDATA[ Roadmap->Milestone->Add new milestone ]]></para>
					<para>我一般是一个月一个里程碑</para>
				</step>
				<step>
					<para>设置 Priorities</para>
					<para>我一般设置为：</para>
					<para>新特性（优先）, 不限期, 立即执行, 当日完成, 本周完成, 本月完成</para>
				</step>
				<step>
					<para>Resolutions</para>
					<para>任务完成, 无效BUG, 重复, 待测试, 待发布</para>
				</step>
				<step>
					<para>Severities</para>
					<para>严重错误, 次要错误, 文字错误, 不合理</para>
				</step>
				<step>
					<para>Ticket Types</para>
					<orderedlist>
						<title>Ticket Types 初始化</title>
						<listitem>开发</listitem>
						<listitem>测试</listitem>
						<listitem>运维</listitem>
						<listitem>设计</listitem>
						<listitem>需求</listitem>
						<listitem>事件</listitem>
						<listitem><para>BUG</para></listitem>
					</orderedlist>

				</step>
				<step>
					<para>Versions</para>
					<para>不多说了 1.0， 1。1 或者  1.0.1</para>
				</step>
			</procedure>
		</section>
		<section>
			<title>Version Control</title>
			<para>Repositories</para>
			<para>默认支持 Subversion, 创建一个仓库记得不要忘记创建下面三个目录  1.branches, 2.tags, 3.trunk</para>
			<screen>
			<![CDATA[
trunk			主干
branches		在下面再创建两个目录development,testing
tags			当项目Release 后会在此处打一个标记
			]]>
			</screen>
			<para>Git 不需要这三个目录，我习惯上会创建几个分支</para>
			<screen>
master			主干
development		开发分支
testing			测试分支
			</screen>
			<para>关于版本库项目目录，我习惯与使用该项目对应的域名作为项目目录</para>
			<screen>
/example.com
/example.com/www.exampe.com
/example.com/images.exampe.com
/example.com/user.exampe.com
/example.com/admin.exampe.com
			</screen>
		</section>

	</section>

	<section>
		<title>Wiki</title>
		<procedure>
			<title>Wiki 使用方法</title>
			<step>
				<para>项目成员页，里面要包含所有项目程序的联系方式</para>
				<screen>
|name|telephone|cellphone|ext|im|email|
|Neo|13122993040||||
				</screen>
			</step>
			<step>
				<para>需求页面</para>
				<screen>
				</screen>
			</step>
		</procedure>
	</section>
	<section>
		<title>Timeline</title>
		<para>可以看到每时每刻的项目变化，包括Wiki, Ticket, 以及代码提交</para>
	</section>
	<section>
		<title>Roadmap</title>
		<para>Roadmap 中的里程碑页，也可以加以利用，我喜欢将一个里程碑分解为多个Ticket 然后在该页面体现，包括整体上的工作安排等等，使用表格来安排Ticket日程，一定程度上弥补了TRAC没有甘特图的不足，</para>
	</section>
	<section>
		<title>Ticket</title>
		<procedure>
			<title>Ticket 使用方法</title>
			<step>
				<para>New Ticket</para>
				<para>新建Ticket, Ticket 可以理解为任务。 </para>
			</step>
			<step>
				<para>将Ticket 分配给团队成员</para>
				<para>受到Ticket后，一定要更改Ticket 为 accept ， 这时在View Tickets 中将会看到该Ticket已经分配，</para>
			</step>
			<step>
				<para>编码过程</para>
				<para>这里有一个特别的规定，提交代码（包括Subversion与Git）注释中必须这样写：</para>
				<screen>
svn ci -m "Ticket #123 - xxxxxxxxxxxxxxxxxxx"
git commit -a -m "Ticket #123 - xxxxxxxxxxxxxxxxxxx"
				</screen>
				<para>格式：Ticket #123 - 你的注释</para>
				<para>这样写的好处是，在Timeline 中可以直接点击 Ticket 编号直接进入Ticket</para>
				<screen>
				<![CDATA[
10:54 AM Ticket #462 (添加一个支付方式) reopened by neo

4:51 PM Changeset in admin.example.com [01a0c4] by neo <neo.chan@example.com>
Ticket #452 - 用户登录日志
				]]>
				</screen>
			</step>
			<step>
				<para>Add Comment</para>
				<para>回复Ticket，上面提交后悔产生一个Subversion版本号，按照下面格式写，然后提交 </para>
				<screen>
Changesets: r1, [1] or changeset:1
				</screen>
				<para>这样就可以实现，进入Ticket即可看到做了哪些代码提交与改动，一目了然。</para>
				<para>Git 写法</para>
				<screen>
[changeset:af212a]
[changeset:7a03c65500c4b96859a27bf5be2901e4ec42afdd]
				</screen>
				<para>如果 Repositories 中有多个项目写法如下</para>
				<screen>
[changeset:af212a/www.example.com]
				</screen>
			</step>
		</procedure>
	</section>
</chapter>


<chapter id="environment">
	<title>DevOps Environment</title>
	<para>
		<graphic format="png" fileref="/management/images/backup/backup.png" srccredit="neo" width="" />
	</para>
	<section id="devops.trac">
		<title>Trac Project Management</title>
		<para></para>
		<para>
			<graphic format="png" fileref="/management/images/workflow/Trac 
	Project Management.png" srccredit="neo" width="" />
		</para>
	</section>
	<section id="devops.environment">
		<title>Development Environment</title>
		<para></para>
		<para>
			<graphic format="png" fileref="/management/images/workflow/Development Environment.png" srccredit="neo" width="" />
		</para>
	</section>
	<section id="devops.testing">
		<title>Testing Environment</title>
		<para></para>
		<para>
			<graphic format="png" fileref="/management/images/workflow/Development Environment.png" srccredit="neo" width="" />
		</para>
	</section>
</chapter>
<!-- <chapter id="implement"><?dbhtml dir="env"?> <title>实施篇</title> </chapter> -->