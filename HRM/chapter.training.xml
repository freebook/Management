<?xml version="1.0" encoding="UTF-8"?>
<chapter id="training">
	<title>培训与开发</title>
	<subtitle>Employee Training and Development </subtitle>
	<para></para>
	<section id="给团队充电">
		<title>给团队充电</title>
		<para>
			我发现国内的企业少有重视团队的学习与充电，有段子说：“把女人当男人用，把男人当牲口用”。程序猿称自己为码畜!
		</para>
		<para>
			我在外企工作的一段时间，外企非常重视
			Trainning，这种Trainning有很多形式，有人力资源组织的，有团队内部牵头的。
		</para>
		<para>
			起初我认为Trainning是培训，随着对Trainning的认识，与其说培训不如说训练更贴切，这种训练有短训也有长训。
		</para>
		<para>
			经过训练后，可能让你从生手变成熟手，意味着更高的产出，更少的次品率。
		</para>
		<para>
			映射到软件开发工作中就是高效率与低缺陷。
		</para>
		<para>
			Trainning
			不是讲PPT（幻灯片）而是实战，需要动手做，亲自实践，团队成员相互合作，初级程序猿可以得到资深程序猿的指导，进步非常快，而资深程序猿之间经验共享也相当重要。
		</para>
		<para>
			其实团队就像军队一样，军队不能天天打仗，一场战斗后就需要休整一段时间，并为下一场战斗做准备，休整阶段每天就是常规训练。
			项目团队也一样，经过一段时间的项目冲刺，就需要休息调整，放慢进度，给团队学习与充电，调剂团队气氛。
		</para>
		<para>
			另外调动团队的积极性是一种艺术，而不是管理层充当监工的角色，上传下达，进度跟踪就打到达到的，进度逼的太紧团队会出负面情绪，导致团队出工不出力，张弛有度非常重要。
		</para>
		<para>
			我主张建立学习型团队，员工能持续学习新的技术，并将技术转化为生产力，这是一种不错的选择。
		</para>

		<section>
			<title>内部培训</title>
			<para>内部培训师是指在公司内部选拔，经人力资源部考核其资历、教案课件编写水平、讲课技巧等并承担公司部分培训课程的开发与授课的人员。内部培训师具有很多外部培训师所不具备的优点和长处。</para>
			<para>内部培训四个重点：提拔内部讲师，制定培训计划，讲师考核，讲师激励等</para>
		</section>
		<section>
			<title>外部培训</title>
			<para>外部培训需要谨慎，对机构、讲师，都需要实现考察摸底。</para>
			<para>我所在的公司希望外部培训，管理层询问我的建议，我的建议是：首先哪些讲师仅仅是讲师而已，讲师有讲师的培训方法，通常一个口才较好的人经过短期培训都能成为讲师。这些讲师并不具有行业经验，让他们培训的结果是让外行培训内行。我们希望培训的目的是什么？就是要他们的经验。</para>
			<para></para>
		</section>
		<section>
			<title>分工、授权、教练</title>
			<para>最好的培训不是听课，而是实战。而实战让管理层最难克制的，就是看到下属工作没有做好。作为管理层你先要接受比你笨的人，很多刚升到管理层的管理者，常常发现，自己去做一天的工作交给下属可能要用一周才能完成，可能还要经历数次返工，去适应这种情况，可能是几个月甚至半年。</para>
			<para>因为你所处的位置不同，致使你看到的事情和基层员工看到的点和面完全不同，例如把一件事情比作一个苹果，你分配下属工作永远是讲苹果分成五份给他们，他们认为苹果就是这样的，从来没有见过完成的苹果，这就是为什么下属无法理解你想法的原因。</para>
		</section>
		<section>
			<title>项目驱动学习</title>
			<para>对于技术的学习应该以项目驱动学习，工作中用到什么就学习什么。</para>
		</section>
	</section>
	<section id="activation">
		<title>激活团队</title>
		<para>企业进入成熟期之后，无论组织运行，还是员工心态，都会出现不同程度的懈怠，创新和变革意识明显下滑，但市场环境在一天天变化，对创新和变革意识的需求却与日俱增，如果不能紧跟市场变化节奏，最终企业将失去竞争力。</para>
		<para>挪威人喜欢吃沙丁鱼，尤其是活鱼。市场上活鱼的价格要比死鱼高许多。所以渔民总是千方百计地想办法让沙丁鱼活着回到渔港。可是虽然经过种种努力，绝大部分沙丁鱼还是在中途因窒息而死亡。但却有一条渔船总能让大部分沙丁鱼活着回到渔港。船长严格保守着秘密。直到船长去世，谜底才揭开。原来是船长在装满沙丁鱼的鱼槽里放进了一条以鱼为主要食物的鲶鱼。鲶鱼进入鱼槽后，由于环境陌生，便四处游动。沙丁鱼见了鲶鱼十分紧张，左冲右突，四处躲避，加速游动。这样一来，一条条沙丁鱼活蹦乱跳地回到了渔港。这就是著名的“鲶鱼效应”。</para>
		<para>医学界认为人们受到惊吓或刺激时，肾上腺会分泌出大量的激素，使人产生前所未有的能量和生存力。所以人在受到惊吓或精神高度紧张、亢奋时，会迸发出超常的能量。</para>
		<para>如何激活一个死气沉沉的团队呢？就如上面故事，你只需在团队中放一条鲶鱼。这条鲶鱼既可以是团队领导，也可以是一名员工，这条鲶鱼会给团队带来活跃的气氛，避免使团队变得死气沉沉，同时让团队成员产生危机感，相互竞争，认识到自身的差距与不足，工作进入紧张的状态。</para>
		<para>轮岗提升能力，在员工作一定年限后就需要轮岗，轮回可以让员工走出舒适区，同事也能获得更有挑战的工作。</para>
	</section>

	<section id="mind">
		<title>脑力工作者的老龄化问题</title>
		<section>
			<title>程序员的记忆力</title>
			<para>人的记忆力的巅峰时期是在多大年纪？</para>
			<para>
				我人为是18~30这个时间段，26是巅峰，30岁以后逐渐衰退更多是靠经验弥补记忆。所以18~30岁这个时间段的经验积累就非常重要。
				工作中发现周围的同事未到30就已经开始出现记忆力衰退的情况。常常是几个月前写的代码自己都没有任何印象。
			</para>
		</section>
		<section>
			<title>脑力工作者偏老龄化</title>
			<para>目前我国的教育是过度教育，拼学历的时代，很多大学生毕业后不适应社会，第一个想法是回去读研，读研出来已经接近27~28，社会经验为零，工作经验为零。
				最应该积累社会经验和工作经验的时间段已经错过，27岁站在起跑线上，按照我之前提出的3:3:3原则（三年初级攻城狮，六年中级工程师，九年高级工程师）36岁。
			</para>
			<para>这个年纪也是心态复杂的年纪，放在那个岗位上都不合适。华为不是正在清退大龄程序员。</para>
		</section>
		<section>
			<title>老龄化存在的问题</title>
			<itemizedlist>
				<listitem>
					<para>不动脑不思考</para>
				</listitem>
				<listitem>
					<para>求稳定求安逸</para>
				</listitem>
				<listitem>
					<para>不学习新技术</para>
				</listitem>
			</itemizedlist>
			<para>面试中发现的问题30岁左右工作6年的面试者，能力不是一般差。 很多人一旦进入一家企业就沿袭原有的技术路线，不再创新，求稳定，求安逸。也可以说没有能力创新或者不敢创新，不想承担风险。
			</para>
		</section>
	</section>
	<section id="学习方式">
		<title>碎片化学习</title>
		<para>学习应以碎片化学习为主，系统学习为辅。我为什么会提出这个理论呢? 原因如下，首先时代变了，我们必须顺应时代背景。</para>
		<section>
			<title>学习方式</title>
			<subtitle>彼得·德鲁克：你必须成为自己的首席执行官</subtitle>
			<para>许多一流的作家学习成绩都不太好，我们熟知的温斯顿·丘吉尔就是其中一个例子。他们在回忆上学的经历时，往往觉得那纯粹是折磨，然而他们的同班同学却很少有这样的记忆。这些作家或许不是很喜欢学校，但最让他们感到痛苦的是无聊。原来，作家们通常不是通过倾听和阅读来学习，而是通过写作来学习的。由于学校不允许他们以写作的方式来学习，因此他们的成绩很糟糕。</para>
			<para>纵观世界各地的学校，它们在办学时都遵循这样一种思路：只存在一种正确的学习方式，而且这种方式适用于所有人。但是，对于学习方式跟别人不太一样的学生而言，被迫按照学校所教的方式学习简直就像下地狱。事实上，学习方式很可能有六七种之多。</para>
			<para>有的人，如丘吉尔，通过写作来学习。有些人则通过做大量的笔记来学习，比如贝多芬。他留下了大量手稿，但他说自己作曲时其实从不翻看那些手稿记录。有人问他为何要保留手稿，据说他的回答是：“如果我不马上把灵感记下来，我很快就会忘掉。一旦我把灵感记下来了，我就永远不会忘记，但也永远不需要再翻看那些记录。”有些人在实干中学习，而另外一些人则通过听自己说话来学习。</para>
			<para>在一切有关自我认识的重要因素中，了解自己的学习方式是最容易的。如果我问别人：“你是怎样学习的？”多数人都知道答案。如果我又问：“你有没有按照自己的方式去学习？”很少有人给出肯定的回答。然而，按照合适自己的方式学习是发挥才干的关键，否则你就会陷入无所作为的困境。</para>
			<para>值得一再强调的是：别试图改变你自己——你不可能做到。但你得努力去改进你的做事方式。还有，不要尝试那些你做不了或做不好的工作。</para>
		</section>
		<section>
			<title>系统化学习</title>
			<para>系统学习就是读书，早期写一本书可能耗费作者半生，出版的门槛也非常高，所以那时的每一本书都是作者毕生心血，书的质量是相当高的，书籍开本通常是32开。</para>
			<para>如今是个人就能写书，随便一本书都超过300页，开本绝大多数是16开，捞干货不到两页纸，这种书籍充斥着图书市场。你会发现很多书中提出的观点当时感觉好高大上，随着阅读量的增加，你发现这个观点 50 年前就有人提出了。例如管理学很多体系/模型等等上个世纪就已经很成熟了。</para>
			<para>读书是有方法，技巧的，如果你不懂，每页逐字阅读，就跟看肥皂剧一样浪费时间。我记得早期的电视剧多是一集，上下两集或上中下三集，后来就有四级到十二集，现在的电视剧普遍是30~80级，基本没法看。常有网友将一部80集电视剧剪辑制作成40分钟的精剪版，图书就没有这么幸运了，你需要自己去筛出里面的精华。</para>
			<para>我觉的经典书籍和 90年代之前的书，尤其是32 开本的书籍，可以逐字阅读。</para>
		</section>
		<section>
			<title>碎片化学习</title>

			<orderedlist numeration="arabic" spacing="compact">
				<title>这时碎片学历显得效率更高，必须要说明什么是“碎片化“，碎片化是指：</title>
				<listitem>
					<para>时间碎片化，随时随地学习</para>
				</listitem>
				<listitem>
					<para>内容碎片化，内容丰富，来源丰富</para>
				</listitem>
			</orderedlist>
			<para>碎片化学习必须遵循：“先结构化，后碎片化”否则碎片化学习弊端大于优点。</para>
			<para>举个例子，早期建高楼大厦方式，是从打地基开始，然后一层一层的建，最后封顶，这种方式就是系统学习。</para>
			<para>而现代建筑完全不同，打地基采用深井方式，然后桩上面浇筑混凝土框架，一旦主题框架完成，接下来的施工自由度非常高，不必逐层施工。甚至可能将各种工种同时开进去施工，这就是碎片化学习，前提是你先结构化，然后碎片化。</para>
			<para>似乎最近几年开始流行钢结构主体了，早期的逐层施工一个大楼需要几年，混凝土框架方法可以缩短到一年，而钢结构框架这种建筑可以缩短到半年。这种方式是模块结构化。</para>
			<para>碎片化会终完成知识体系的拼图。</para>
		</section>
	</section>
	<section id="利用好工具">
		<title>利用好工具</title>
		<para>荀子曰：“君子生非异也，善假于物也”。</para>
		<para>译：君子的本性跟一般人没什么不同,（只是君子）善于借助外物罢了。假：借助</para>
		<para>意思是君子的资质与一般人没有什么区别,君子之所以高于一般人,是因为他能善于利用外物.善于利用已有的条件,是君子成功的一个重要途径.</para>
	</section>
	<section id="买土豆的故事">
		<title>买土豆的故事</title>
		<para>
			由于公司决定将服务器从阿里云迁移到公司IDC机房，运维是另一个事业部负责，需要配合他们迁移，搞了几天，我突然想起一个故事。
		</para>
		<para>
			《买土豆的故事》一个经典的职场故事。
		</para>
		<para>
			张三和李四同时受雇于一家店铺，拿同样的薪水。一段时间后，张三青云直上，李四却原地踏步。李四想不通，老板为何厚此薄彼？
		</para>
		<para>
			老板于是说：“李四，你现在到集市上去一下，看看今天早上有卖土豆的吗？
			一会儿，李四回来汇报：“只有一个农民拉了一车土豆在卖。”
		</para>
		<para>
			有多少？”老板又问。
			李四没有问过，于是赶紧又跑到集上，然后回来告诉老板：“一共40袋土豆。”
			价格呢？您没有叫我打听价格。李四委屈地申明。
		</para>
		<para>
			老板又把张三叫来：“张三，你现在到集市上去一下，看看今天早上有卖土豆的吗？”
		</para>
		<para>
			张三也很快就从集市上回来了，他一口气向老板汇报说：“今天集市上只有一个农民在卖土豆，一共40袋，价格是两毛五分钱一斤。我看了一下，这些土豆的质量不错，价格也便宜，于是顺便带回来一个让您看看。”
		</para>
		<para>
			张三边说边从提包里拿出土豆，“我想这么便宜的土豆一定可以赚钱，根据我们以往的销量，40袋土豆在一个星期左右就可以全部卖掉。
			而且，咱们全部买下还可以再适当优惠。所以，我把那个农民也带来了，他现在正在外面等您回话呢……”
		</para>
		<para>能读懂《买土豆的故事》的人看不真的不多......</para>
		<section id="运维团队买土豆的故事">
			<title>运维团队买土豆的故事</title>
			<para>运维：环境已经配置好了，你们可以验收了。</para>
			<para>测试：www.example.com 根部进不去。 </para>
			<para>运维：telnet www.example.com 80 通不通？ </para>
			<para>测试：不通</para>
			<para>运维：找到问题了，稍等，10分钟后再测试</para>
			<para>测试：能进去了，但是短信发送布料 </para>
			<para>运维：稍等，短信网关添加白名单</para>
			<para>测试：可以了，缓存不生效 </para>
			<para>运维：稍等，已经处理</para>
			<para>测试：生效了，数据不能创建</para>
			<para>运维：找到问题了，是XXX权限配置问题，再测试一下 ... ...</para>
			<para>一下省略五千字...... ... ...</para>
		</section>
		<section id="开发团队买土豆的故事">
			<title>开发团队买土豆的故事</title>
			<para>这个故事也同样发生在开发跟测试两个团队间</para>
			<para>开发：开发完了，可以测试了</para>
			<para>测试：XXX还有BUG</para>
			<para>开发：修复好了，再测试一下 ... ... </para>
			<para>一下省略五千字...... ... ...</para>
			<para>这样的故事几乎在IT公司每个都在发生......	</para>
		</section>
	</section>
</chapter>