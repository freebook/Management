<?xml version="1.0" encoding="UTF-8"?>
<chapter id="training">
	<title>培训与开发</title>
	<subtitle>Employee Training and Development </subtitle>
	<para></para>
	<section id="期待效应">
		<title>期待效应</title>
		<subtitle>亦称“罗森塔尔效应(RobertRosenthal Effect)”或“皮格马利翁效应”。</subtitle>
		<para>期待效应，是一个心理学的概念，通常是指在人际交往中，一方充沛的感情和较高的期望可以引起另一方微妙而深刻的变化。</para>
		<para>美国心理学家罗森塔尔等人于1968年做过一个著名实验。他们到一所小学，在一至六年级各选三个班的儿童进行煞有介事的“预测未来发展的测验”，然后实验者将认为有“优异发展可能”的学生名单通知教师。其实，这个名单并不是根据测验结果确定的，而是随机抽取的。它是以“权威性的谎言”暗示教师，从而调动了教师对名单上的学生的某种期待心理。8个月后，再次智能测验的结果发现，名单上的学生的成绩普遍提高，教师也给了他们良好的品行评语。这个实验取得了奇迹般的效果，人们把这种通过教师对学生心理的潜移默化的影响，从而使学生取得教师所期望的进步的现象，称为“罗森塔尔效应”，习惯上也称为期待效应（皮格马利翁是古希腊神话中塞浦路斯国王，他对一尊少女塑像产生爱慕之情，他的热望最终使这尊雕像变为一个真人，两人相爱结合）。</para>
		<para>教育实践也表明：如果教师喜爱某些学生，对他们会抱有较高期望，经过一段时间，学生感受到教师的关怀、爱护和鼓励；常常以积极态度对待老师、对待学习以及对待自己的行为，学生更加自尊、自信、自爱、自强，诱发出一种积极向上的激情，这些学生常常会取得老师所期望的进步。相反，那些受到老师忽视、歧视的学生，久而久之会从教师的言谈、举止、表情中感受到教师的“偏心”，也会以消极的态度对待老师、对待自己的学习，不理会或拒绝听从老师的要求；这些学生常常会一天天变坏，最后沦为社会的不良分子。尽管有些例外，但大趋势却是如此，同时这也给教师敲响了警钟。  </para>
		<para>暗示在本质上，是人的情感和观念，会不同程度地受到别人下意识的影响。人们会不自觉地接受自己喜欢、钦佩、信任和崇拜的人的影响和暗示。而这种暗示，正是让你梦想成真的基石之一……</para>
		<para>“皮格玛利翁效应”留给我们这样一个启示：赞美、信任和期待具有一种能量，它能改变人的行为，当一个获得另一个人的信任、赞美时，他便感觉获得了社会支持，从而增强了自我价值，变得自信、自尊，获得一种积极向上的动力，并尽力达到对方的期待，以避免对方失望，从而维持这种社会支持的连续性。</para>
		<para>
			生活中只有两种悲剧:一种是没有得到我们想要的，另外一种是得到了我们想要的。 ——王尔德
			<footnote>
				<para>奥斯卡·王尔德（Oscar Wilde，1854年10月16日－1900年11月30日），爱尔兰作家、诗人、剧作家，英国唯美主义艺术运动的倡导者。</para>
			</footnote>
		</para>
	</section>
	<section id="找出有潜力的员工">
		<title>找出有潜力的员工</title>
		<para>找出企业中有潜力的员工并不难。</para>
		<itemizedlist>
			<title>找出企业中有潜力的员工只需关注三点：</title>
			<listitem>
				<para>分析能力</para>
			</listitem>
			<listitem>
				<para>取得成就</para>
			</listitem>
			<listitem>
				<para>人际关系</para>
			</listitem>
		</itemizedlist>
	</section>
	<section id="给团队充电">
		<title>给团队充电</title>
		<para>
			我发现国内的企业少有重视团队的学习与充电，有段子说：“把女人当男人用，把男人当牲口用”。程序猿称自己为码畜!
		</para>
		<para>
			我在外企工作的一段时间，外企非常重视
			Trainning，这种Trainning有很多形式，有人力资源组织的，有团队内部牵头的。
		</para>
		<para>
			起初我认为Trainning是培训，随着对Trainning的认识，与其说培训不如说训练更贴切，这种训练有短训也有长训。
		</para>
		<para>
			经过训练后，可能让你从生手变成熟手，意味着更高的产出，更少的次品率。
		</para>
		<para>
			映射到软件开发工作中就是高效率与低缺陷。
		</para>
		<para>
			Trainning
			不是讲PPT（幻灯片）而是实战，需要动手做，亲自实践，团队成员相互合作，初级程序猿可以得到资深程序猿的指导，进步非常快，而资深程序猿之间经验共享也相当重要。
		</para>
		<para>
			其实团队就像军队一样，军队不能天天打仗，一场战斗后就需要休整一段时间，并为下一场战斗做准备，休整阶段每天就是常规训练。
			项目团队也一样，经过一段时间的项目冲刺，就需要休息调整，放慢进度，给团队学习与充电，调剂团队气氛。
		</para>
		<para>
			另外调动团队的积极性是一种艺术，而不是管理层充当监工的角色，上传下达，进度跟踪就打到达到的，进度逼的太紧团队会出负面情绪，导致团队出工不出力，张弛有度非常重要。
		</para>
		<para>
			我主张建立学习型团队，员工能持续学习新的技术，并将技术转化为生产力，这是一种不错的选择。
		</para>

		<section>
			<title>内部培训</title>
			<para>内部培训师是指在公司内部选拔，经人力资源部考核其资历、教案课件编写水平、讲课技巧等并承担公司部分培训课程的开发与授课的人员。内部培训师具有很多外部培训师所不具备的优点和长处。</para>
			<para>内部培训四个重点：提拔内部讲师，制定培训计划，讲师考核，讲师激励等</para>
		</section>
		<section>
			<title>外部培训</title>
			<para>外部培训需要谨慎，对机构、讲师，都需要实现考察摸底。</para>
			<para>我所在的公司希望外部培训，管理层询问我的建议，我的建议是：首先哪些讲师仅仅是讲师而已，讲师有讲师的培训方法，通常一个口才较好的人经过短期培训都能成为讲师。这些讲师并不具有行业经验，让他们培训的结果是让外行培训内行。我们希望培训的目的是什么？就是要他们的经验。</para>
			<para></para>
		</section>
		<section>
			<title>分工、授权、教练</title>
			<para>最好的培训不是听课，而是实战。而实战让管理层最难克制的，就是看到下属工作没有做好。作为管理层你先要接受比你笨的人，很多刚升到管理层的管理者，常常发现，自己去做一天的工作交给下属可能要用一周才能完成，可能还要经历数次返工，去适应这种情况，可能是几个月甚至半年。</para>
			<para>因为你所处的位置不同，致使你看到的事情和基层员工看到的点和面完全不同，例如把一件事情比作一个苹果，你分配下属工作永远是讲苹果分成五份给他们，他们认为苹果就是这样的，从来没有见过完成的苹果，这就是为什么下属无法理解你想法的原因。</para>
		</section>
		<section>
			<title>项目驱动学习</title>
			<para>对于技术的学习应该以项目驱动学习，工作中用到什么就学习什么。</para>
		</section>
	</section>
	<section id="mind">
		<title>脑力工作者的老龄化问题</title>
		<section>
			<title>程序员的记忆力</title>
			<para>人的记忆力的巅峰时期是在多大年纪？</para>
			<para>
				我人为是18~30这个时间段，26是巅峰，30岁以后逐渐衰退更多是靠经验弥补记忆。所以18~30岁这个时间段的经验积累就非常重要。
				工作中发现周围的同事未到30就已经开始出现记忆力衰退的情况。常常是几个月前写的代码自己都没有任何印象。
			</para>
		</section>
		<section>
			<title>脑力工作者偏老龄化</title>
			<para>目前我国的教育是过度教育，拼学历的时代，很多大学生毕业后不适应社会，第一个想法是回去读研，读研出来已经接近27~28，社会经验为零，工作经验为零。
				最应该积累社会经验和工作经验的时间段已经错过，27岁站在起跑线上，按照我之前提出的3:3:3原则（三年初级攻城狮，六年中级工程师，九年高级工程师）36岁。
			</para>
			<para>这个年纪也是心态复杂的年纪，放在那个岗位上都不合适。华为不是正在清退大龄程序员。</para>
		</section>
		<section>
			<title>老龄化存在的问题</title>
			<itemizedlist>
				<listitem>
					<para>不动脑不思考</para>
				</listitem>
				<listitem>
					<para>求稳定求安逸</para>
				</listitem>
				<listitem>
					<para>不学习新技术</para>
				</listitem>
			</itemizedlist>
			<para>面试中发现的问题30岁左右工作6年的面试者，能力不是一般差。 很多人一旦进入一家企业就沿袭原有的技术路线，不再创新，求稳定，求安逸。也可以说没有能力创新或者不敢创新，不想承担风险。
			</para>
		</section>
	</section>
	&section.training.xml;
	
	<section id="买土豆的故事">
		<title>买土豆的故事</title>
		<para>
			由于公司决定将服务器从阿里云迁移到公司IDC机房，运维是另一个事业部负责，需要配合他们迁移，搞了几天，我突然想起一个故事。
		</para>
		<para>
			《买土豆的故事》一个经典的职场故事。
		</para>
		<para>
			张三和李四同时受雇于一家店铺，拿同样的薪水。一段时间后，张三青云直上，李四却原地踏步。李四想不通，老板为何厚此薄彼？
		</para>
		<para>
			老板于是说：“李四，你现在到集市上去一下，看看今天早上有卖土豆的吗？
			一会儿，李四回来汇报：“只有一个农民拉了一车土豆在卖。”
		</para>
		<para>
			有多少？”老板又问。
			李四没有问过，于是赶紧又跑到集上，然后回来告诉老板：“一共40袋土豆。”
			价格呢？您没有叫我打听价格。李四委屈地申明。
		</para>
		<para>
			老板又把张三叫来：“张三，你现在到集市上去一下，看看今天早上有卖土豆的吗？”
		</para>
		<para>
			张三也很快就从集市上回来了，他一口气向老板汇报说：“今天集市上只有一个农民在卖土豆，一共40袋，价格是两毛五分钱一斤。我看了一下，这些土豆的质量不错，价格也便宜，于是顺便带回来一个让您看看。”
		</para>
		<para>
			张三边说边从提包里拿出土豆，“我想这么便宜的土豆一定可以赚钱，根据我们以往的销量，40袋土豆在一个星期左右就可以全部卖掉。
			而且，咱们全部买下还可以再适当优惠。所以，我把那个农民也带来了，他现在正在外面等您回话呢……”
		</para>
		<para>能读懂《买土豆的故事》的人看不真的不多......</para>
		<section id="运维团队买土豆的故事">
			<title>运维团队买土豆的故事</title>
			<para>运维：环境已经配置好了，你们可以验收了。</para>
			<para>测试：www.example.com 根部进不去。 </para>
			<para>运维：telnet www.example.com 80 通不通？ </para>
			<para>测试：不通</para>
			<para>运维：找到问题了，稍等，10分钟后再测试</para>
			<para>测试：能进去了，但是短信发送布料 </para>
			<para>运维：稍等，短信网关添加白名单</para>
			<para>测试：可以了，缓存不生效 </para>
			<para>运维：稍等，已经处理</para>
			<para>测试：生效了，数据不能创建</para>
			<para>运维：找到问题了，是XXX权限配置问题，再测试一下 ... ...</para>
			<para>一下省略五千字...... ... ...</para>
		</section>
		<section id="开发团队买土豆的故事">
			<title>开发团队买土豆的故事</title>
			<para>这个故事也同样发生在开发跟测试两个团队间</para>
			<para>开发：开发完了，可以测试了</para>
			<para>测试：XXX还有BUG</para>
			<para>开发：修复好了，再测试一下 ... ... </para>
			<para>一下省略五千字...... ... ...</para>
			<para>这样的故事几乎在IT公司每个都在发生......	</para>
		</section>
	</section>	
</chapter>